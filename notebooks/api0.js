function createApi() {
    return new ApiImpl();
}
exports.createApi = createApi;
var RamlWrapper = require('./deps/Raml08Wrapper');
var executor = require('./deps/executor');
var env = require('./deps/executionEnvironment');
var endpoints = require('./deps/endpoints');
env.setPath(__dirname);
env.getReportManager().setLogPath(__dirname);
var Channels_historyResourceImpl = (function () {
    function Channels_historyResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/channels.history", 'get', {
                "options": options
            });
            return res;
        };
    }
    Channels_historyResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Channels_historyResourceImpl;
})();
var Channels_infoResourceImpl = (function () {
    function Channels_infoResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/channels.info", 'get', {
                "options": options
            });
            return res;
        };
    }
    Channels_infoResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Channels_infoResourceImpl;
})();
var Channels_inviteResourceImpl = (function () {
    function Channels_inviteResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/channels.invite", 'get', {
                "options": options
            });
            return res;
        };
    }
    Channels_inviteResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Channels_inviteResourceImpl;
})();
var Channels_joinResourceImpl = (function () {
    function Channels_joinResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/channels.join", 'get', {
                "options": options
            });
            return res;
        };
    }
    Channels_joinResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Channels_joinResourceImpl;
})();
var Channels_leaveResourceImpl = (function () {
    function Channels_leaveResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/channels.leave", 'get', {
                "options": options
            });
            return res;
        };
    }
    Channels_leaveResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Channels_leaveResourceImpl;
})();
var Channels_listResourceImpl = (function () {
    function Channels_listResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/channels.list", 'get', {
                "options": options
            });
            return res;
        };
    }
    Channels_listResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Channels_listResourceImpl;
})();
var Channels_markResourceImpl = (function () {
    function Channels_markResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/channels.mark", 'get', {
                "options": options
            });
            return res;
        };
    }
    Channels_markResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Channels_markResourceImpl;
})();
var Channels_setPurposeResourceImpl = (function () {
    function Channels_setPurposeResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/channels.setPurpose", 'get', {
                "options": options
            });
            return res;
        };
    }
    Channels_setPurposeResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Channels_setPurposeResourceImpl;
})();
var Channels_setTopicResourceImpl = (function () {
    function Channels_setTopicResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/channels.setTopic", 'get', {
                "options": options
            });
            return res;
        };
    }
    Channels_setTopicResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Channels_setTopicResourceImpl;
})();
var Chat_deleteResourceImpl = (function () {
    function Chat_deleteResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/chat.delete", 'get', {
                "options": options
            });
            return res;
        };
    }
    Chat_deleteResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Chat_deleteResourceImpl;
})();
var Chat_postMessageResourceImpl = (function () {
    function Chat_postMessageResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/chat.postMessage", 'get', {
                "options": options
            });
            return res;
        };
    }
    Chat_postMessageResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Chat_postMessageResourceImpl;
})();
var Chat_updateResourceImpl = (function () {
    function Chat_updateResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/chat.update", 'get', {
                "options": options
            });
            return res;
        };
    }
    Chat_updateResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Chat_updateResourceImpl;
})();
var Emoji_listResourceImpl = (function () {
    function Emoji_listResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/emoji.list", 'get', {
                "options": options
            });
            return res;
        };
    }
    Emoji_listResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Emoji_listResourceImpl;
})();
var Files_infoResourceImpl = (function () {
    function Files_infoResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/files.info", 'get', {
                "options": options
            });
            return res;
        };
    }
    Files_infoResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Files_infoResourceImpl;
})();
var Files_listResourceImpl = (function () {
    function Files_listResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/files.list", 'get', {
                "options": options
            });
            return res;
        };
    }
    Files_listResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Files_listResourceImpl;
})();
var Files_uploadResourceImpl = (function () {
    function Files_uploadResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/files.upload", 'get', {
                "options": options
            });
            return res;
        };
    }
    Files_uploadResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Files_uploadResourceImpl;
})();
var Groups_historyResourceImpl = (function () {
    function Groups_historyResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/groups.history", 'get', {
                "options": options
            });
            return res;
        };
    }
    Groups_historyResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Groups_historyResourceImpl;
})();
var Groups_listResourceImpl = (function () {
    function Groups_listResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/groups.list", 'get', {
                "options": options
            });
            return res;
        };
    }
    Groups_listResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Groups_listResourceImpl;
})();
var Groups_markResourceImpl = (function () {
    function Groups_markResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/groups.mark", 'get', {
                "options": options
            });
            return res;
        };
    }
    Groups_markResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Groups_markResourceImpl;
})();
var Groups_setPurposeResourceImpl = (function () {
    function Groups_setPurposeResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/groups.setPurpose", 'get', {
                "options": options
            });
            return res;
        };
    }
    Groups_setPurposeResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Groups_setPurposeResourceImpl;
})();
var Groups_setTopicResourceImpl = (function () {
    function Groups_setTopicResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/groups.setTopic", 'get', {
                "options": options
            });
            return res;
        };
    }
    Groups_setTopicResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Groups_setTopicResourceImpl;
})();
var Im_historyResourceImpl = (function () {
    function Im_historyResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/im.history", 'get', {
                "options": options
            });
            return res;
        };
    }
    Im_historyResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Im_historyResourceImpl;
})();
var Im_listResourceImpl = (function () {
    function Im_listResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/im.list", 'get', {
                "options": options
            });
            return res;
        };
    }
    Im_listResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Im_listResourceImpl;
})();
var Im_markResourceImpl = (function () {
    function Im_markResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/im.mark", 'get', {
                "options": options
            });
            return res;
        };
    }
    Im_markResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Im_markResourceImpl;
})();
var Search_allResourceImpl = (function () {
    function Search_allResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/search.all", 'get', {
                "options": options
            });
            return res;
        };
    }
    Search_allResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Search_allResourceImpl;
})();
var Search_filesResourceImpl = (function () {
    function Search_filesResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/search.files", 'get', {
                "options": options
            });
            return res;
        };
    }
    Search_filesResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Search_filesResourceImpl;
})();
var Search_messagesResourceImpl = (function () {
    function Search_messagesResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/search.messages", 'get', {
                "options": options
            });
            return res;
        };
    }
    Search_messagesResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Search_messagesResourceImpl;
})();
var Stars_listResourceImpl = (function () {
    function Stars_listResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/stars.list", 'get', {
                "options": options
            });
            return res;
        };
    }
    Stars_listResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Stars_listResourceImpl;
})();
var Users_listResourceImpl = (function () {
    function Users_listResourceImpl(_parent) {
        var _this = this;
        this._parent = _parent;
        this.get = function (options) {
            var res = _this.invoke("/users.list", 'get', {
                "options": options
            });
            return res;
        };
    }
    Users_listResourceImpl.prototype.invoke = function (path, method, obj) {
        return this._parent.invoke(path, method, obj);
    };
    return Users_listResourceImpl;
})();
var ApiImpl = (function () {
    function ApiImpl() {
        this.baseUrl = 'https://slack.com/api';
        this.cfgEncoded = { "numberIsString": true, "createTypesForResources": true, "queryParametersSecond": true, "collapseGet": false, "collapseOneMethod": false, "collapseMediaTypes": false, "methodNamesAsPrefixes": false, "storeHarEntry": true, "createTypesForParameters": true, "reuseTypeForParameters": true, "createTypesForSchemaElements": true, "reuseTypesForSchemaElements": true, "throwExceptionOnIncorrectStatus": false, "async": false, "debugOptions": { "generateImplementation": true, "generateSchemas": true, "generateInterface": true, "resourcePathFilter": null }, "overwriteModules": true };
        this.apiEncoded = { "data": { "title": "Slack", "baseUri": "https://slack.com/api", "securitySchemes": [{ "oauth_2_0": { "description": "", "type": "OAuth 2.0", "describedBy": { "queryParameters": { "token": { "description": "Used to send a valid OAuth 2 access token. \n" } } }, "settings": { "authorizationUri": "https://slack.com/oauth/authorize", "accessTokenUri": "https://slack.com/api/oauth.access", "authorizationGrants": ["code"], "scopes": ["identify", "read", "post"] } } }], "schemas": [{ "channelsHistory": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"latest\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"messages\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ts\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"user\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"text\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ts\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"user\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"text\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"is_starred\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ts\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"wibblr\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"has_more\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}" }, { "channalsInfo": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"channel\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"created\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"creator\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"is_archived\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"is_general\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"is_member\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"members\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"topic\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"purpose\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"last_read\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"latest\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"unread_count\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}" }, { "channelsInvite": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"channel\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"created\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"creator\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"is_archived\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"is_member\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"is_general\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"last_read\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"latest\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"unread_count\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"members\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"topic\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"value\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"creator\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"last_set\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"purpose\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"value\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"creator\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"last_set\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}" }, { "ok": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}" }, { "channels": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"channels\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"created\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"creator\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"is_archived\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"is_member\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"num_members\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"topic\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"value\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"creator\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"last_set\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"purpose\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"value\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"creator\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"last_set\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}" }, { "purpose": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"purpose\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}" }, { "topic": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"topic\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}" }, { "chatOk": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"ts\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"channel\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}" }, { "chatUpdate": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"channel\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"ts\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"text\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}" }, { "emojiList": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"emoji\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"bowtie\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"squirrel\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"shipit\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}" }, { "groups": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"groups\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"created\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"creator\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"is_archived\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"members\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"topic\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"value\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"creator\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"last_set\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"purpose\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"value\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"creator\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"last_set\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}" }, { "ims": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"ims\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"user\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"created\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"is_user_deleted\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}" }, { "searchAll": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"query\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"messages\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"files\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}" }, { "searchFiles": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"query\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"files\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"total\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"paging\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"count\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"total\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"page\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"pages\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"matches\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}" }, { "searchMessages": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"query\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"messages\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"total\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"paging\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"count\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"total\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"page\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"pages\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"matches\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}" }, { "starList": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"channel\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"message\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"file\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"file\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"comment\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"channel\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"paging\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"count\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"total\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"page\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"pages\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}" }, { "usersList": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"members\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"deleted\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"color\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"profile\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"first_name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"last_name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"real_name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"email\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"skype\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"phone\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"image_24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"image_32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"image_48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"image_72\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"image_192\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"is_admin\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"is_owner\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"has_files\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}" }, { "fileObj": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"file\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}" }, { "files": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"files\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"paging\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"count\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"total\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"page\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"pages\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}" }], "resourceTypes": [{ "setPurposeType": { "get?": { "description": "Sets the purpose for a channel.", "queryParameters": { "channel": { "description": "<<resourceName>> to fetch history for.", "required": true, "example": "C1234567890" }, "purpose": { "description": "The new purpose", "required": true, "example": "My Purpose" } }, "responses": { "200": { "body": { "application/json": { "schema": "purpose", "example": "{\n  \"ok\" : true ,\n  \"purpose\" : \"This is the new purpose!\"\n}" } } } } } } }, { "historyType": { "get?": { "queryParameters": { "channel": { "description": "<<resourceName>> to fetch history for.", "required": true, "example": "C1234567890" }, "latest": { "description": "Timestamp of the oldest recent seen message.", "default": "now", "example": 1234567890.123456 }, "oldest": { "description": "Timestamp of the latest previously seen message.", "default": 0, "example": 1234567890.123456 }, "count": { "description": "Number of messages to return, between 1 and 1000.", "type": "number", "default": 100, "example": 100 }, "has_more": { "type": "boolean" }, "is_limited": { "type": "boolean" } }, "responses": { "200": { "body": { "application/json": { "schema": "channelsHistory", "example": "{\n  \"ok\" : true ,\n  \"latest\" : \"1358547726.000003\" ,\n  \"messages\" : [\n    {\n      \"type\" : \"message\" ,\n      \"ts\" : \"1358546515.000008\" ,\n      \"user\" : \"U2147483896\" ,\n      \"text\" : \"Hello\"\n    } , {\n      \"type\" : \"message\" ,\n      \"ts\" : \"1358546515.000007\" ,\n      \"user\" : \"U2147483896\" ,\n      \"text\" : \"World\" ,\n      \"is_starred\" : true\n    } , {\n      \"type\" : \"something_else\" ,\n      \"ts\" : \"1358546515.000007\" ,\n      \"wibblr\" : true\n    }\n  ] ,\n  \"has_more\" : false\n}" } } } } } } }, { "markType": { "get?": { "queryParameters": { "channel": { "description": "<<resourceName>> to fetch history for.", "required": true, "example": "C1234567890" }, "ts": { "description": "Timestamp of the most recently seen message.", "required": true, "example": 1234567890.123456 } }, "responses": { "200": { "body": { "application/json": { "schema": "ok", "example": "{\n  \"ok\" : true\n}" } } } } } } }], "securedBy": ["oauth_2_0"], "documentation": [{ "title": "Headline", "content": "Slack brings all your communication together in one place. It's real-time messaging, archiving and search for modern teams." }], "protocols": ["HTTPS"], "resources": [{ "type": { "historyType": { "resourceName": "Channel" } }, "relativeUri": "/channels.history", "methods": [{ "queryParameters": { "channel": { "description": "Channel to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" }, "latest": { "description": "Timestamp of the oldest recent seen message.", "default": "now", "example": 1234567890.123456, "displayName": "latest", "type": "string" }, "oldest": { "description": "Timestamp of the latest previously seen message.", "default": 0, "example": 1234567890.123456, "displayName": "oldest", "type": "string" }, "count": { "description": "Number of messages to return, between 1 and 1000.", "type": "number", "default": 100, "example": 100, "displayName": "count" }, "has_more": { "type": "boolean", "displayName": "has_more" }, "is_limited": { "type": "boolean", "displayName": "is_limited" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"latest\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"messages\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ts\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"user\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"text\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ts\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"user\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"text\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"is_starred\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ts\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"wibblr\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"has_more\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"latest\" : \"1358547726.000003\" ,\n  \"messages\" : [\n    {\n      \"type\" : \"message\" ,\n      \"ts\" : \"1358546515.000008\" ,\n      \"user\" : \"U2147483896\" ,\n      \"text\" : \"Hello\"\n    } , {\n      \"type\" : \"message\" ,\n      \"ts\" : \"1358546515.000007\" ,\n      \"user\" : \"U2147483896\" ,\n      \"text\" : \"World\" ,\n      \"is_starred\" : true\n    } , {\n      \"type\" : \"something_else\" ,\n      \"ts\" : \"1358546515.000007\" ,\n      \"wibblr\" : true\n    }\n  ] ,\n  \"has_more\" : false\n}" } } } }, "description": "Fetches history of messages and events from a channel.", "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["channels.history"] }, { "relativeUri": "/channels.info", "methods": [{ "description": "Gets information about a channel.", "queryParameters": { "channel": { "description": "Channel to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"channel\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"created\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"creator\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"is_archived\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"is_general\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"is_member\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"members\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"topic\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"purpose\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"last_read\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"latest\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"unread_count\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"channel\" : {\n    \"id\" : \"C024BE91L\" ,\n    \"name\" : \"fun\" ,\n    \"created\" : \"1360782804\" ,\n    \"creator\" : \"U024BE7LH\" ,\n    \"is_archived\" : false ,\n    \"is_general\" : false ,\n    \"is_member\" : true ,\n    \"members\" : \"\" ,\n    \"topic\" : \"\" ,\n    \"purpose\" : \"\" ,\n    \"last_read\" : \"1401383885.000061\" ,\n    \"latest\" : \"\" ,\n    \"unread_count\" : 0\n  }\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["channels.info"] }, { "relativeUri": "/channels.invite", "methods": [{ "description": "Invites a user to a channel.", "queryParameters": { "channel": { "description": "Channel to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" }, "user": { "description": "User to invite to channel.", "required": true, "example": "U1234567890", "displayName": "user", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"channel\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"created\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"creator\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"is_archived\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"is_member\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"is_general\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"last_read\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"latest\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"unread_count\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"members\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"topic\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"value\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"creator\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"last_set\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"purpose\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"value\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"creator\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"last_set\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"channel\" : {\n    \"id\" : \"C024BE91L\" ,\n    \"name\" : \"fun\" ,\n    \"created\" : \"1360782804\" ,\n    \"creator\" : \"U024BE7LH\" ,\n    \"is_archived\" : false ,\n    \"is_member\" : true ,\n    \"is_general\" : false ,\n    \"last_read\" : \"1401383885.000061\" ,\n    \"latest\" : \"\" ,\n    \"unread_count\" : 0 ,\n    \"members\" : \"\" ,\n    \"topic\" : {\n      \"value\" : \"Fun times\" ,\n      \"creator\" : \"U024BE7LV\" ,\n      \"last_set\" : \"1369677212\"\n    } ,\n    \"purpose\" : {\n      \"value\" : \"This channel is for fun\" ,\n      \"creator\" : \"U024BE7LH\" ,\n      \"last_set\" : \"1360782804\"\n    }\n  }\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["channels.invite"] }, { "relativeUri": "/channels.join", "methods": [{ "description": "Joins a channel, creating it if needed.", "queryParameters": { "name": { "description": "Name of channel to join", "required": true, "displayName": "name", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"channel\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"created\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"creator\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"is_archived\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"is_member\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"is_general\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"last_read\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"latest\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"unread_count\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"members\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"topic\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"value\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"creator\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"last_set\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"purpose\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"value\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"creator\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"last_set\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"channel\" : {\n    \"id\" : \"C024BE91L\" ,\n    \"name\" : \"fun\" ,\n    \"created\" : \"1360782804\" ,\n    \"creator\" : \"U024BE7LH\" ,\n    \"is_archived\" : false ,\n    \"is_member\" : true ,\n    \"is_general\" : false ,\n    \"last_read\" : \"1401383885.000061\" ,\n    \"latest\" : \"\" ,\n    \"unread_count\" : 0 ,\n    \"members\" : \"\" ,\n    \"topic\" : {\n      \"value\" : \"Fun times\" ,\n      \"creator\" : \"U024BE7LV\" ,\n      \"last_set\" : \"1369677212\"\n    } ,\n    \"purpose\" : {\n      \"value\" : \"This channel is for fun\" ,\n      \"creator\" : \"U024BE7LH\" ,\n      \"last_set\" : \"1360782804\"\n    }\n  }\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["channels.join"] }, { "relativeUri": "/channels.leave", "methods": [{ "description": "Leaves a channel.", "queryParameters": { "channel": { "description": "Channel to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["channels.leave"] }, { "relativeUri": "/channels.list", "methods": [{ "description": "Lists all channels in a Slack team.", "queryParameters": { "exclude_archived": { "description": "Don't return archived channels.", "default": 0, "example": 1, "displayName": "exclude_archived", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"channels\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"created\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"creator\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"is_archived\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"is_member\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"num_members\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"topic\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"value\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"creator\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"last_set\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"purpose\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"value\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"creator\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"last_set\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"channels\" : [\n    {\n      \"id\" : \"C024BE91L\" ,\n      \"name\" : \"fun\" ,\n      \"created\" : \"1360782804\" ,\n      \"creator\" : \"U024BE7LH\" ,\n      \"is_archived\" : false ,\n      \"is_member\" : false ,\n      \"num_members\" : 6 ,\n      \"topic\" : {\n        \"value\" : \"Fun times\" ,\n        \"creator\" : \"U024BE7LV\" ,\n        \"last_set\" : \"1369677212\"\n      } ,\n      \"purpose\" : {\n        \"value\" : \"This channel is for fun\" ,\n        \"creator\" : \"U024BE7LH\" ,\n        \"last_set\" : \"1360782804\"\n      }\n    } \n  ]\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["channels.list"] }, { "type": { "markType": { "resourceName": "Channel" } }, "relativeUri": "/channels.mark", "methods": [{ "queryParameters": { "channel": { "description": "Channel to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" }, "ts": { "description": "Timestamp of the most recently seen message.", "required": true, "example": 1234567890.123456, "displayName": "ts", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true\n}" } } } }, "description": "Sets the read cursor in a channel.", "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["channels.mark"] }, { "type": { "setPurposeType": { "resourceName": "Channel" } }, "relativeUri": "/channels.setPurpose", "methods": [{ "description": "Sets the purpose for a channel.", "queryParameters": { "channel": { "description": "Channel to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" }, "purpose": { "description": "The new purpose", "required": true, "example": "My Purpose", "displayName": "purpose", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"purpose\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"purpose\" : \"This is the new purpose!\"\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["channels.setPurpose"] }, { "relativeUri": "/channels.setTopic", "methods": [{ "description": "Sets the topic for a channel.", "queryParameters": { "channel": { "description": "Channel to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" }, "topic": { "description": "The new topic", "required": true, "example": "My Topic", "displayName": "topic", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"topic\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"topic\" : \"This is the new topic!\"\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["channels.setTopic"] }, { "relativeUri": "/chat.delete", "methods": [{ "description": "Deletes a message.", "queryParameters": { "channel": { "description": "Channel to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" }, "ts": { "description": "Timestamp of the most recently seen message.", "required": true, "example": 1234567890.123456, "displayName": "ts", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"ts\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"channel\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"ts\" : \"1405895017.000506\" ,\n  \"channel\" : \"C024BE91L\"\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["chat.delete"] }, { "relativeUri": "/chat.postMessage", "methods": [{ "description": "Sends a message to a channel.", "queryParameters": { "channel": { "description": "Channel to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" }, "text": { "description": "Text of the message to send. See below for an explanation of formatting.", "required": true, "example": "Hello world", "displayName": "text", "type": "string" }, "username": { "description": "Name of bot.", "example": "My Bot", "displayName": "username", "type": "string" }, "parse": { "description": "Change how messages are treated. See below.", "example": "full", "displayName": "parse", "type": "string" }, "link_names": { "description": "Find and link channel names and usernames.", "example": 1, "displayName": "link_names", "type": "string" }, "unfurl_links": { "description": "Pass 1 to enable unfurling of primarily text-based content.", "example": 1, "displayName": "unfurl_links", "type": "string" }, "icon_url": { "description": "URL to an image to use as the icon for this message", "example": "http://lorempixel.com/48/48", "displayName": "icon_url", "type": "string" }, "icon_emoji": { "description": "emoji to use as the icon for this message. Overrides icon_url.", "example": ":chart_with_upwards_trend:", "displayName": "icon_emoji", "type": "string" }, "attachments": { "description": "Structured message attachments.", "displayName": "attachments", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"ts\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"channel\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"ts\" : \"1405895017.000506\" ,\n  \"channel\" : \"C024BE91L\"\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["chat.postMessage"] }, { "relativeUri": "/chat.update", "methods": [{ "description": "Updates a message.", "queryParameters": { "channel": { "description": "Channel to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" }, "text": { "description": "Text of the message to send. See below for an explanation of formatting.", "required": true, "example": "Hello world", "displayName": "text", "type": "string" }, "ts": { "description": "Timestamp of the most recently seen message.", "required": true, "example": 1234567890.123456, "displayName": "ts", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"channel\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"ts\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"text\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"channel\" : \"C024BE91L\" ,\n  \"ts\" : \"1401383885.000061\" ,\n  \"text\" : \"Updated Text\"\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["chat.update"] }, { "relativeUri": "/emoji.list", "methods": [{ "description": "Lists custom emoji for a team.", "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"emoji\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"bowtie\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"squirrel\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"shipit\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"emoji\" : {\n    \"bowtie\" : \"https://my.slack.com/emoji/bowtie/46ec6f2bb0.png\" ,\n    \"squirrel\" : \"https://my.slack.com/emoji/squirrel/f35f40c0e0.png\" ,\n    \"shipit\" : \"alias:squirrel\"\n  }\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["emoji.list"] }, { "relativeUri": "/files.info", "methods": [{ "description": "Gets information about a team file.", "queryParameters": { "file": { "description": "File to fetch info for", "required": true, "example": "F1234567890", "displayName": "file", "type": "string" }, "count": { "description": "Number of items to return per page.", "type": "number", "default": 100, "example": 100, "displayName": "count" }, "page": { "description": "Page number of results to return.", "type": "number", "default": 1, "example": 2, "displayName": "page" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"file\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"file\" : {}\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["files.info"] }, { "relativeUri": "/files.list", "methods": [{ "description": "Lists and filters team files.", "queryParameters": { "file": { "description": "File to fetch info for", "required": true, "example": "F1234567890", "displayName": "file", "type": "string" }, "user": { "description": "Filter files created by a single user.", "example": "U1234567890", "displayName": "user", "type": "string" }, "ts_from": { "description": "Filter files created after this timestamp (inclusive).", "default": 0, "example": 123456789, "displayName": "ts_from", "type": "string" }, "ts_to": { "description": "Filter files created before this timestamp (inclusive).", "default": "now", "example": 123456789, "displayName": "ts_to", "type": "string" }, "types": { "description": "You can pass multiple values in the types argument, like types=posts,snippets.The default value is all, which does not filter the list.", "enum": ["pdfs", "zips", "posts", "images", "snippets", "gdocs", "all"], "displayName": "types", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"files\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"paging\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"count\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"total\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"page\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"pages\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"files\" : \"\" ,\n  \"paging\" : {\n    \"count\" : 100 ,\n    \"total\" : 295 ,\n    \"page\" : 1 ,\n    \"pages\" : 3\n  }\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["files.list"] }, { "relativeUri": "/files.upload", "methods": [{ "description": "Uploads or creates a file.", "queryParameters": { "file": { "description": "File contents via multipart/form-data.", "displayName": "file", "type": "string" }, "content": { "description": "File contents via a POST var.", "displayName": "content", "type": "string" }, "filetype": { "description": "Slack-internal file type identifier.", "example": "php", "displayName": "filetype", "type": "string" }, "filename": { "description": "Filename of file.", "example": "foo.txt", "displayName": "filename", "type": "string" }, "title": { "description": "Title of file.", "example": "My File", "displayName": "title", "type": "string" }, "initial_comment": { "description": "Initial comment to add to file.", "example": "Best!", "displayName": "initial_comment", "type": "string" }, "channels": { "description": "Comma separated list of channels to share the file into.", "example": "C1234567890", "displayName": "channels", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"file\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"file\" : {}\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["files.upload"] }, { "type": { "historyType": { "resourceName": "Group" } }, "relativeUri": "/groups.history", "methods": [{ "queryParameters": { "channel": { "description": "Group to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" }, "latest": { "description": "Timestamp of the oldest recent seen message.", "default": "now", "example": 1234567890.123456, "displayName": "latest", "type": "string" }, "oldest": { "description": "Timestamp of the latest previously seen message.", "default": 0, "example": 1234567890.123456, "displayName": "oldest", "type": "string" }, "count": { "description": "Number of messages to return, between 1 and 1000.", "type": "number", "default": 100, "example": 100, "displayName": "count" }, "has_more": { "type": "boolean", "displayName": "has_more" }, "is_limited": { "type": "boolean", "displayName": "is_limited" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"latest\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"messages\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ts\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"user\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"text\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ts\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"user\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"text\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"is_starred\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ts\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"wibblr\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"has_more\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"latest\" : \"1358547726.000003\" ,\n  \"messages\" : [\n    {\n      \"type\" : \"message\" ,\n      \"ts\" : \"1358546515.000008\" ,\n      \"user\" : \"U2147483896\" ,\n      \"text\" : \"Hello\"\n    } , {\n      \"type\" : \"message\" ,\n      \"ts\" : \"1358546515.000007\" ,\n      \"user\" : \"U2147483896\" ,\n      \"text\" : \"World\" ,\n      \"is_starred\" : true\n    } , {\n      \"type\" : \"something_else\" ,\n      \"ts\" : \"1358546515.000007\" ,\n      \"wibblr\" : true\n    }\n  ] ,\n  \"has_more\" : false\n}" } } } }, "description": "Fetches history of messages and events from a private group.", "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["groups.history"] }, { "relativeUri": "/groups.list", "methods": [{ "description": "Lists private groups that the calling user has access to.", "queryParameters": { "exclude_archived": { "description": "Don't return archived channels.", "default": 0, "example": 1, "displayName": "exclude_archived", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"groups\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"created\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"creator\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"is_archived\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"members\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"topic\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"value\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"creator\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"last_set\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"purpose\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"value\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"creator\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"last_set\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"groups\" : [\n    {\n      \"id\" : \"G024BE91L\" ,\n      \"name\" : \"secretplans\" ,\n      \"created\" : \"1360782804\" ,\n      \"creator\" : \"U024BE7LH\" ,\n      \"is_archived\" : false ,\n      \"members\" : [\n        \"U024BE7LH\"\n      ] ,\n      \"topic\" : {\n        \"value\" : \"Secret plans on hold\" ,\n        \"creator\" : \"U024BE7LV\" ,\n        \"last_set\" : \"1369677212\"\n      } ,\n      \"purpose\" : {\n        \"value\" : \"Discuss secret plans that no-one else should know\" ,\n        \"creator\" : \"U024BE7LH\" ,\n        \"last_set\" : \"1360782804\"\n      }\n    }\n  ]\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["groups.list"] }, { "type": { "markType": { "resourceName": "Group" } }, "relativeUri": "/groups.mark", "methods": [{ "queryParameters": { "channel": { "description": "Group to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" }, "ts": { "description": "Timestamp of the most recently seen message.", "required": true, "example": 1234567890.123456, "displayName": "ts", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true\n}" } } } }, "description": "Sets the read cursor in a private group.", "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["groups.mark"] }, { "type": { "setPurposeType": { "resourceName": "Group" } }, "relativeUri": "/groups.setPurpose", "methods": [{ "description": "Sets the purpose for a private group.", "queryParameters": { "channel": { "description": "Group to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" }, "purpose": { "description": "The new purpose", "required": true, "example": "My Purpose", "displayName": "purpose", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"purpose\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"purpose\" : \"This is the new purpose!\"\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["groups.setPurpose"] }, { "relativeUri": "/groups.setTopic", "methods": [{ "description": "Sets the topic for a private group.", "queryParameters": { "channel": { "description": "Channel to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" }, "topic": { "description": "The new topic", "required": true, "example": "My Topic", "displayName": "topic", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"topic\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"topic\" : \"This is the new topic!\"\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["groups.setTopic"] }, { "type": { "historyType": { "resourceName": "Direct message channel" } }, "relativeUri": "/im.history", "methods": [{ "queryParameters": { "channel": { "description": "Direct message channel to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" }, "latest": { "description": "Timestamp of the oldest recent seen message.", "default": "now", "example": 1234567890.123456, "displayName": "latest", "type": "string" }, "oldest": { "description": "Timestamp of the latest previously seen message.", "default": 0, "example": 1234567890.123456, "displayName": "oldest", "type": "string" }, "count": { "description": "Number of messages to return, between 1 and 1000.", "type": "number", "default": 100, "example": 100, "displayName": "count" }, "has_more": { "type": "boolean", "displayName": "has_more" }, "is_limited": { "type": "boolean", "displayName": "is_limited" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"latest\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"messages\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ts\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"user\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"text\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ts\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"user\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"text\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"is_starred\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ts\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"wibblr\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"has_more\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"latest\" : \"1358547726.000003\" ,\n  \"messages\" : [\n    {\n      \"type\" : \"message\" ,\n      \"ts\" : \"1358546515.000008\" ,\n      \"user\" : \"U2147483896\" ,\n      \"text\" : \"Hello\"\n    } , {\n      \"type\" : \"message\" ,\n      \"ts\" : \"1358546515.000007\" ,\n      \"user\" : \"U2147483896\" ,\n      \"text\" : \"World\" ,\n      \"is_starred\" : true\n    } , {\n      \"type\" : \"something_else\" ,\n      \"ts\" : \"1358546515.000007\" ,\n      \"wibblr\" : true\n    }\n  ] ,\n  \"has_more\" : false\n}" } } } }, "description": "Fetches history of messages and events from direct message channel.", "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["im.history"] }, { "relativeUri": "/im.list", "methods": [{ "description": "Lists direct message channels for the calling user.", "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"ims\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"user\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"created\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"is_user_deleted\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"ims\" : [\n    {\n      \"id\" : \"D024BFF1M\" ,\n      \"user\" : \"USLACKBOT\" ,\n      \"created\" : 1372105335 ,\n      \"is_user_deleted\" : false\n    } , {\n      \"id\" : \"D024BE7RE\" ,\n      \"user\" : \"U024BE7LH\" ,\n      \"created\" : 1356250715 ,\n      \"is_user_deleted\" : false\n    }\n  ]\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["im.list"] }, { "type": { "markType": { "resourceName": "Direct message channel" } }, "relativeUri": "/im.mark", "methods": [{ "queryParameters": { "channel": { "description": "Channel to fetch history for.", "required": true, "example": "C1234567890", "displayName": "channel", "type": "string" }, "ts": { "description": "Timestamp of the most recently seen message.", "required": true, "example": 1234567890.123456, "displayName": "ts", "type": "string" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true\n}" } } } }, "description": "Sets the read cursor in a direct message channel.", "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["im.mark"] }, { "relativeUri": "/search.all", "methods": [{ "description": "Searches for messages and files matching a query.", "queryParameters": { "query": { "description": "Search query. May contains booleans, etc.", "required": true, "example": "pickleface", "displayName": "query", "type": "string" }, "sort": { "description": "Return matches sorted by either score or timestamp.", "enum": ["timestamp", "score"], "default": "score", "example": "timestamp", "displayName": "sort", "type": "string" }, "sort_dir": { "description": "Change sort direction to ascending (asc) or descending (desc).", "enum": ["desc", "asc"], "default": "desc", "example": "asc", "displayName": "sort_dir", "type": "string" }, "highlight": { "description": "Pass a value of 1 to enable query highlight markers .", "example": 1, "displayName": "highlight", "type": "string" }, "count": { "description": "Number of items to return per page.", "type": "number", "default": 100, "example": 100, "displayName": "count" }, "page": { "description": "Page number of results to return.", "type": "number", "default": 1, "example": 2, "displayName": "page" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"query\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"messages\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"files\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"query\" : \"Best Pickles\" ,\n  \"messages\" : \"\" ,\n  \"files\" : \"\"\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["search.all"] }, { "relativeUri": "/search.files", "methods": [{ "description": "Searches for files matching a query.", "queryParameters": { "query": { "description": "Search query. May contains booleans, etc.", "required": true, "example": "pickleface", "displayName": "query", "type": "string" }, "sort": { "description": "Return matches sorted by either score or timestamp.", "enum": ["timestamp", "score"], "default": "score", "example": "timestamp", "displayName": "sort", "type": "string" }, "sort_dir": { "description": "Change sort direction to ascending (asc) or descending (desc).", "enum": ["desc", "asc"], "default": "desc", "example": "asc", "displayName": "sort_dir", "type": "string" }, "highlight": { "description": "Pass a value of 1 to enable query highlight markers .", "example": 1, "displayName": "highlight", "type": "string" }, "count": { "description": "Number of items to return per page.", "type": "number", "default": 100, "example": 100, "displayName": "count" }, "page": { "description": "Page number of results to return.", "type": "number", "default": 1, "example": 2, "displayName": "page" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"query\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"files\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"total\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"paging\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"count\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"total\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"page\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"pages\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"matches\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"query\" : \"test\" ,\n  \"files\" : {\n    \"total\" : 829 ,\n    \"paging\" : {\n      \"count\" : 20 ,\n      \"total\" : 829 ,\n      \"page\" : 1 ,\n      \"pages\" : 42\n    } ,\n    \"matches\" : \"\"\n  }\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["search.files"] }, { "relativeUri": "/search.messages", "methods": [{ "description": "Searches for messages matching a query.", "queryParameters": { "query": { "description": "Search query. May contains booleans, etc.", "required": true, "example": "pickleface", "displayName": "query", "type": "string" }, "sort": { "description": "Return matches sorted by either score or timestamp.", "enum": ["timestamp", "score"], "default": "score", "example": "timestamp", "displayName": "sort", "type": "string" }, "sort_dir": { "description": "Change sort direction to ascending (asc) or descending (desc).", "enum": ["desc", "asc"], "default": "desc", "example": "asc", "displayName": "sort_dir", "type": "string" }, "highlight": { "description": "Pass a value of 1 to enable query highlight markers .", "example": 1, "displayName": "highlight", "type": "string" }, "count": { "description": "Number of items to return per page.", "type": "number", "default": 100, "example": 100, "displayName": "count" }, "page": { "description": "Page number of results to return.", "type": "number", "default": 1, "example": 2, "displayName": "page" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"query\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"messages\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"total\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"paging\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"count\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"total\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"page\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"pages\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"matches\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"query\" : \"test\" ,\n  \"messages\" : {\n    \"total\" : 829 ,\n    \"paging\" : {\n      \"count\" : 20 ,\n      \"total\" : 829 ,\n      \"page\" : 1 ,\n      \"pages\" : 42\n    } ,\n    \"matches\" : \"\"\n  }\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["search.messages"] }, { "relativeUri": "/stars.list", "methods": [{ "description": "Lists stars for a user.", "queryParameters": { "user": { "description": "Show stars by this user. Defaults to the authed user.", "example": "U1234567890", "displayName": "user", "type": "string" }, "count": { "description": "Number of items to return per page.", "type": "number", "default": 100, "example": 100, "displayName": "count" }, "page": { "description": "Page number of results to return.", "type": "number", "default": 1, "example": 2, "displayName": "page" } }, "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"channel\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"message\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"file\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"file\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"comment\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"channel\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"paging\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"count\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"total\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"page\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"pages\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"items\" : [\n    {\n      \"type\" : \"message\" ,\n      \"channel\" : \"C2147483705\" ,\n      \"message\" : \"\"\n    } , {\n      \"type\" : \"file\" ,\n      \"file\" : \"\"\n    } , {\n      \"type\" : \"file_comment\" ,\n      \"file\" : \"\" ,\n      \"comment\" : \"\"\n    } , {\n      \"type\" : \"channel\" ,\n      \"channel\" : \"C2147483705\"\n    }\n  ] ,\n  \"paging\" : {\n    \"count\" : 100 ,\n    \"total\" : 4 ,\n    \"page\" : 1 ,\n    \"pages\" : 1\n  }\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["stars.list"] }, { "relativeUri": "/users.list", "methods": [{ "description": "Lists all users in a Slack team.", "responses": { "200": { "body": { "application/json": { "schema": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"ok\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"members\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"deleted\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"color\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"profile\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"first_name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"last_name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"real_name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"email\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"skype\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"phone\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"image_24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"image_32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"image_48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"image_72\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"image_192\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"is_admin\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"is_owner\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"has_files\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}", "example": "{\n  \"ok\" : true ,\n  \"members\" : [\n    {\n      \"id\" : \"U023BECGF\" ,\n      \"name\" : \"bobby\" ,\n      \"deleted\" : false ,\n      \"color\" : \"9f69e7\" ,\n      \"profile\" : {\n        \"first_name\" : \"Bobby\" ,\n        \"last_name\" : \"Tables\" ,\n        \"real_name\" : \"Bobby Tables\" ,\n        \"email\" : \"bobby@slack.com\" ,\n        \"skype\" : \"my-skype-name\" ,\n        \"phone\" : \"+1 (123) 456 7890\" ,\n        \"image_24\" : \"https://...\" ,\n        \"image_32\" : \"https://...\" ,\n        \"image_48\" : \"https://...\" ,\n        \"image_72\" : \"https://...\" ,\n        \"image_192\" : \"https://...\"\n      } ,\n      \"is_admin\" : true ,\n      \"is_owner\" : true ,\n      \"has_files\" : true\n    }\n  ]\n}" } } } }, "protocols": ["HTTPS"], "method": "get", "securedBy": ["oauth_2_0"] }], "relativeUriPathSegments": ["users.list"] }] } };
        this.channels_history = new Channels_historyResourceImpl(this);
        this.channels_info = new Channels_infoResourceImpl(this);
        this.channels_invite = new Channels_inviteResourceImpl(this);
        this.channels_join = new Channels_joinResourceImpl(this);
        this.channels_leave = new Channels_leaveResourceImpl(this);
        this.channels_list = new Channels_listResourceImpl(this);
        this.channels_mark = new Channels_markResourceImpl(this);
        this.channels_setPurpose = new Channels_setPurposeResourceImpl(this);
        this.channels_setTopic = new Channels_setTopicResourceImpl(this);
        this.chat_delete = new Chat_deleteResourceImpl(this);
        this.chat_postMessage = new Chat_postMessageResourceImpl(this);
        this.chat_update = new Chat_updateResourceImpl(this);
        this.emoji_list = new Emoji_listResourceImpl(this);
        this.files_info = new Files_infoResourceImpl(this);
        this.files_list = new Files_listResourceImpl(this);
        this.files_upload = new Files_uploadResourceImpl(this);
        this.groups_history = new Groups_historyResourceImpl(this);
        this.groups_list = new Groups_listResourceImpl(this);
        this.groups_mark = new Groups_markResourceImpl(this);
        this.groups_setPurpose = new Groups_setPurposeResourceImpl(this);
        this.groups_setTopic = new Groups_setTopicResourceImpl(this);
        this.im_history = new Im_historyResourceImpl(this);
        this.im_list = new Im_listResourceImpl(this);
        this.im_mark = new Im_markResourceImpl(this);
        this.search_all = new Search_allResourceImpl(this);
        this.search_files = new Search_filesResourceImpl(this);
        this.search_messages = new Search_messagesResourceImpl(this);
        this.stars_list = new Stars_listResourceImpl(this);
        this.users_list = new Users_listResourceImpl(this);
        this.inv = new executor.APIExecutor(this.declaration(), this.baseUrlResolved(), this.cfgEncoded);
    }
    ApiImpl.prototype.declaration = function () {
        var api = new RamlWrapper.Api(this.apiEncoded.data);
        endpoints.setApi(api);
        return api;
    };
    ApiImpl.prototype.authentificate = function (schemaName, options) {
    };
    ApiImpl.prototype.log = function (vName, val) {
        this.inv.log(vName, val);
        return val;
    };
    ApiImpl.prototype.baseUrlResolved = function () {
        var burl = this.baseUrl;
        return burl;
    };
    ApiImpl.prototype.invoke = function (path, method, obj) {
        env.registerApi(this.declaration());
        return this.inv.execute(this.baseUrlResolved() + path, method, obj);
    };
    ApiImpl.prototype.authenticate = function (schemaName, options) {
        return null;
    };
    return ApiImpl;
})();
exports.ApiImpl = ApiImpl;
var meta = {};
//# sourceMappingURL=api0.js.map